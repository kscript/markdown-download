import merge from"webpack-merge";import md5 from"md5";import html2markdown from"html-to-md";import"mathjax/es5/tex-svg";import{query,getExt,getText,getUrl,queryAll,insertAfter,getAttribute,formatDate,exec,formatName}from"./utils";const replace=(e,t)=>(t="function"==typeof t?t:e=>e,e.replace(/\$\{(.*?)\}/g,((e,n)=>t(n.replace(/(^\s+|\s+$)/g,""))))),setInfo=(e,t)=>(e=Object.assign({now:formatDate("yyyy-MM-dd HH:mm:ss"),copyright:!1,url:location.href,description:"转载",tag:[]},e instanceof Object?e:{}),replace((t="string"==typeof t?t:"---\n        title: ${title}\n        date: ${now}\n        copyright: ${copyright}\n        author: ${author}\n        home: ${home}\n        origin: ${origin}\n        url: ${url}\n        tag: ${tag}\n        categories: ${categories}\n        description: ${description}\n    ---\n    ").replace(/\n\s+/g,"\n"),(t=>void 0===e[t]?"":Array.isArray(e[t])?"\n  - "+e[t].join("\n  - "):e[t]))),formatCopyRight=(e,{retain:t,copyright:n})=>{const o=t?"> 当前文档由 [markdown文档下载插件](https://github.com/kscript/markdown-download) 下载, 原文链接: [${title}](${url})  ":n;return"string"==typeof o?"\n\n"+replace(o,(t=>e[t]||""))+"\n\n":""},getMarkdown=e=>e.innerHTML;export const tex2svg=e=>e.replace(/<ztext>(.*?)<\/ztext>/g,((e,t)=>{const n=decodeURIComponent(t),o=MathJax.tex2svg(n);return o.setAttribute("data-tex",n),o.style.display="inline",o.outerHTML}));const formatParams=(e,t,n)=>(t=t instanceof Object?t:{},{options:e=merge({},{br:!1,code:!1,link:!0,lazyKey:"data-src",origin:"",selectors:{}},e instanceof Object?e:{},t),customOptions:t,hook:n=n instanceof Object?n:{}}),getContainer=e=>{if(e){if("string"==typeof e){const t=document.createElement("div");return t.innerHTML=e,t}return e instanceof Node?e:document}return document};export const formatMarkdownBody=(e,t,n,o)=>{const r=query(t.body,e).cloneNode(!0);if(queryAll(t.copyBtn,r).map((e=>e.parentElement.removeChild(e))),queryAll("[data-id]",r).map((e=>e.removeAttribute("data-id"))),t.invalid&&queryAll(t.invalid,r).map((e=>e.parentElement.removeChild(e))),t.unpack&&queryAll(t.unpack,r).map((e=>{const t=document.createElement("span");t.innerHTML=e.innerHTML,insertAfter(document.createElement("br"),e),e.parentElement.replaceChild(t,e)})),t.tag){const e=[];queryAll(t.tag).map((t=>{e.push(t.innerText.replace(/(^[\n\s]+|[\n\s]+$)/g,""))})),n.context.tag=e}if(t.categories){const e=[];queryAll(t.categories).map((t=>{e.push(t.innerText.replace(/(^[\n\s]+|[\n\s]+$)/g,""))})),n.context.categories=e}return n.link&&queryAll("a",r).map((e=>e.href=e.title)),n.code&&queryAll("code",r).map((e=>{const t=n.br||/copyable/.test(e.className)?"\n":"",o=e.getAttribute("lang")||(e.className.split("-")||{})[1]||"",r="```"+(o?" "+o:"")+t+e.innerText+t+"```"+t;e.parentElement.replaceChild(document.createTextNode(r),e)})),r};const extract=async({markdownBody:e,selectors:t,options:n,exec:o,hook:r})=>{const{origin:a,context:i,localOptions:c={}}=n,s=getText(t.title)||document.title,l=s.replace(/[\\\/\?<>:'\*\|]/g,"_"),m=queryAll("img",e).map((e=>{const t=e.getAttribute("downloadName"),o=e.getAttribute("downloadUrl");if(t&&o)return e.src="./"+formatName(t),{name:t,downloadUrl:o};const r=e.getAttribute([].concat(n.lazyKey||[]).find((t=>e.getAttribute(t)))||"src").replace(/\?$/,""),a=getExt(r),i=l+"/"+md5(r)+(a?"."+a:"");return e.src="./"+formatName(i),{name:i,downloadUrl:r}})),d=setInfo({title:s,origin:a,author:getText(t.userName),home:getUrl(location.origin,getAttribute("href",t.userLink)),tag:i.tag,categories:i.categories,description:e.innerText.replace(/^([\n\s]+)/g,"").replace(/\n/g," ").slice(0,50)+"..."},c.tpl),p=html2markdown(d+getMarkdown(e),{}),g=formatCopyRight({title:s,url:location.href},c),u=await o(r.formatContent,i,{markdownBody:e,markdownDoc:p});return m.push({name:l+".md",content:`${u&&"string"==typeof u?u:p}${g}`}),{fileName:s,files:m}};export const downloadMarkdown=async(...e)=>{const t={},{options:n,hook:o}=formatParams(...e),{selectors:r,el:a=document}=n,i=getContainer(a),c={container:i,options:n},s=async(e,n)=>await exec(o[e],t,Object.assign(c,n instanceof Object?n:{}))instanceof Object;if(n.context=t,await s("beforeExtract"))return exec();const l=formatMarkdownBody(i,r,n);if(await s("extract",{markdownBody:l}))return exec();const{fileName:m,files:d}=await extract({markdownBody:l,selectors:r,options:n,exec,hook:o});return await s("afterExtract",{fileName:m,files:d})?exec():{type:"download",fileName:m,files:d}};export default downloadMarkdown;